{"version":3,"sources":["webpack:///./src/pages/index.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"+QAMO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,yCACA,qBAAG,sBAAQC,WAAW,KAAnB,SAAH,uOAIA,4NAGA,iDACA,qBAAG,+BAAGA,WAAW,KAAQ,CACrB,KAAQ,aADT,iBAAH,oVAQA,6CACA,qBAAG,+BAAGA,WAAW,KAAQ,CACrB,KAAQ,WADT,eAAH,uMASJJ,EAAWK,gBAAiB","file":"component---src-pages-index-md-faf1f53115c6851d6611.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"D:/projects/js/published/dflex/site/src/components/layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`Getting Started`}</h1>\n    <p><strong parentName=\"p\">{`DFlex`}</strong>{` is a JavaScript ambitious project to manipulate DOM Elements. It\noffers a solution to manipulate DOM elements with API easy to use\nand implement. It doesn't reinvent the wheel instead it was built upon\nwhat we already have.`}</p>\n    <p>{`Growth and flexibility are what define this project that's why it contains different\npackages helping to shape the final product and make it handy to use\ndepending on your project requirements.`}</p>\n    <h2>{`DOM relations algorithm`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"/dom-gen\"\n      }}>{`dflex/dom-gen`}</a>{` Generates relations between DOM elements based on\nelement depth. For each DOM node, it generates three keys: Siblings, Parent and\nChildren keys and two\nindexes one refers to node order in its level and the other refers to the parent\nindex in parental level. Together: keys and indexes combined form of\nuniqueness for each element.`}</p>\n    <h2>{`DOM traversal store`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"/store\"\n      }}>{`dflex/store`}</a>{` Works on connecting all registered elements and organizes the\nrelations between them using the DOM relations generator algorithm. Allowing\neach element to be reached recursively using its id.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}